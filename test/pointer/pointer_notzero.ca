fn main() {
    let vi8   : *i8    = 4324343243i64 as *i8    ;
    let vi32  : *i32   = 4324343243i64 as *i32   ;
    let vi64  : *i64   = 4324343243i64 as *i64   ;
    let vu8   : *u8    = 4324343243i64 as *u8    ;
    let vu32  : *u32   = 4324343243i64 as *u32   ;
    let vu64  : *u64   = 4324343243i64 as *u64   ;
    let vf32  : *f32   = 4324343243i64 as *f32   ;
    let vf64  : *f64   = 4324343243i64 as *f64   ;
    let visize: *isize = 4324343243i64 as *isize ;
    let vusize: *usize = 4324343243i64 as *usize ;
    let vvoid : *void  = 4324343243i64 as *void  ;
    let vchar : *char  = 4324343243i64 as *char  ;
    let vuchar: *uchar = 4324343243i64 as *uchar ;
    let vbool : *bool  = 4324343243i64 as *bool  ;

    let pvi8:    **i8    = vi8    as **i8;
    let pvi32:   **i32   = vi32   as **i32  ;
    let pvi64:   **i64   = vi64   as **i64  ;
    let pvu8:    **u8    = vu8    as **u8   ;
    let pvu32:   **u32   = vu32   as **u32  ;
    let pvu64:   **u64   = vu64   as **u64  ;
    let pvf32:   **f32   = vf32   as **f32  ;
    let pvf64:   **f64   = vf64   as **f64  ;
    let pvisize: **isize = visize as **isize;
    let pvusize: **usize = vusize as **usize;
    let pvvoid:  **void  = vvoid  as **void ;
    let pvchar:  **char  = vchar  as **char ;
    let pvuchar: **uchar = vuchar as **uchar;
    let pvbool:  **bool  = vbool  as **bool ;

    let p2vi8    = vi8    as **i8   ;
    let p2vi32   = vi32   as **i32  ;
    let p2vi64   = vi64   as **i64  ;
    let p2vu8    = vu8    as **u8   ;
    let p2vu32   = vu32   as **u32  ;
    let p2vu64   = vu64   as **u64  ;
    let p2vf32   = vf32   as **f32  ;
    let p2vf64   = vf64   as **f64  ;
    let p2visize = visize as **isize;
    let p2vusize = vusize as **usize;
    let p2vvoid  = vvoid  as **void ;
    let p2vchar  = vchar  as **char ;
    let p2vuchar = vuchar as **uchar;
    let p2vbool  = vbool  as **bool ;

    let ppvi8:    ***i8    = vi8    as ***i8;
    let ppvi32:   ***i32   = vi32   as ***i32  ;
    let ppvi64:   ***i64   = vi64   as ***i64  ;
    let ppvu8:    ***u8    = vu8    as ***u8   ;
    let ppvu32:   ***u32   = vu32   as ***u32  ;
    let ppvu64:   ***u64   = vu64   as ***u64  ;
    let ppvf32:   ***f32   = vf32   as ***f32  ;
    let ppvf64:   ***f64   = vf64   as ***f64  ;
    let ppvisize: ***isize = visize as ***isize;
    let ppvusize: ***usize = vusize as ***usize;
    let ppvvoid:  ***void  = vvoid  as ***void ;
    let ppvchar:  ***char  = vchar  as ***char ;
    let ppvuchar: ***uchar = vuchar as ***uchar;
    let ppvbool:  ***bool  = vbool  as ***bool ;

    let pp2vi8    = vi8    as ***i8   ;
    let pp2vi32   = vi32   as ***i32  ;
    let pp2vi64   = vi64   as ***i64  ;
    let pp2vu8    = vu8    as ***u8   ;
    let pp2vu32   = vu32   as ***u32  ;
    let pp2vu64   = vu64   as ***u64  ;
    let pp2vf32   = vf32   as ***f32  ;
    let pp2vf64   = vf64   as ***f64  ;
    let pp2visize = visize as ***isize;
    let pp2vusize = vusize as ***usize;
    let pp2vvoid  = vvoid  as ***void ;
    let pp2vchar  = vchar  as ***char ;
    let pp2vuchar = vuchar as ***uchar;
    let pp2vbool  = vbool  as ***bool ;

    let pppvi8:    ****i8    = vi8    as ****i8;
    let pppvi32:   ****i32   = vi32   as ****i32  ;
    let pppvi64:   ****i64   = vi64   as ****i64  ;
    let pppvu8:    ****u8    = vu8    as ****u8   ;
    let pppvu32:   ****u32   = vu32   as ****u32  ;
    let pppvu64:   ****u64   = vu64   as ****u64  ;
    let pppvf32:   ****f32   = vf32   as ****f32  ;
    let pppvf64:   ****f64   = vf64   as ****f64  ;
    let pppvisize: ****isize = visize as ****isize;
    let pppvusize: ****usize = vusize as ****usize;
    let pppvvoid:  ****void  = vvoid  as ****void ;
    let pppvchar:  ****char  = vchar  as ****char ;
    let pppvuchar: ****uchar = vuchar as ****uchar;
    let pppvbool:  ****bool  = vbool  as ****bool ;

    let ppp2vi8    = vi8    as ****i8   ;
    let ppp2vi32   = vi32   as ****i32  ;
    let ppp2vi64   = vi64   as ****i64  ;
    let ppp2vu8    = vu8    as ****u8   ;
    let ppp2vu32   = vu32   as ****u32  ;
    let ppp2vu64   = vu64   as ****u64  ;
    let ppp2vf32   = vf32   as ****f32  ;
    let ppp2vf64   = vf64   as ****f64  ;
    let ppp2visize = visize as ****isize;
    let ppp2vusize = vusize as ****usize;
    let ppp2vvoid  = vvoid  as ****void ;
    let ppp2vchar  = vchar  as ****char ;
    let ppp2vuchar = vuchar as ****uchar;
    let ppp2vbool  = vbool  as ****bool ;


    let svi8    = ppp2vi8     as *i8   ;
    let svi32   = ppp2vi32    as *i32  ;
    let svi64   = ppp2vi64    as *i64  ;
    let svu8    = ppp2vu8     as *u8   ;
    let svu32   = ppp2vu32    as *u32  ;
    let svu64   = ppp2vu64    as *u64  ;
    let svf32   = ppp2vf32    as *f32  ;
    let svf64   = ppp2vf64    as *f64  ;
    let svisize = ppp2visize  as *isize;
    let svusize = ppp2vusize  as *usize;
    let svvoid  = ppp2vvoid   as *void ;
    let svchar  = ppp2vchar   as *char ;
    let svuchar = ppp2vuchar  as *uchar;
    let svbool  = ppp2vbool   as *bool ;


}

