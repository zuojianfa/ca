set(test_case_seq 1)
do_testf(pointer "primitives.ca.ll" "primitives.ca.ll.tmp" ca -ll primitives.ca primitives.ca.ll.tmp)
do_testf(pointer "primitives2.ca.ll" "primitives2.ca.ll.tmp" ca -ll primitives2.ca primitives2.ca.ll.tmp)
do_testf(pointer "primitives3.ca.ll" "primitives3.ca.ll.tmp" ca -ll primitives3.ca primitives3.ca.ll.tmp)
do_testf(pointer "primitives_notzero.ca.ll" "primitives_notzero.ca.ll.tmp" ca -ll primitives_notzero.ca primitives_notzero.ca.ll.tmp)
do_testf(pointer "primitives2_notzero.ca.ll" "primitives2_notzero.ca.ll.tmp" ca -ll primitives2_notzero.ca primitives2_notzero.ca.ll.tmp)
do_testf(pointer "primitives3_notzero.ca.ll" "primitives3_notzero.ca.ll.tmp" ca -ll primitives3_notzero.ca primitives3_notzero.ca.ll.tmp)
do_testf(pointer "primitives_minus.ca.ll" "primitives_minus.ca.ll.tmp" ca -ll primitives_minus.ca primitives_minus.ca.ll.tmp)
do_testf(pointer "primitives2_minus.ca.ll" "primitives2_minus.ca.ll.tmp" ca -ll primitives2_minus.ca primitives2_minus.ca.ll.tmp)
do_testf(pointer "primitives3_minus.ca.ll" "primitives3_minus.ca.ll.tmp" ca -ll primitives3_minus.ca primitives3_minus.ca.ll.tmp)
do_testf(pointer "pointer.ca.ll" "pointer.ca.ll.tmp" ca -ll pointer.ca pointer.ca.ll.tmp)
do_testf(pointer "pointer2.ca.ll" "pointer2.ca.ll.tmp" ca -ll pointer2.ca pointer2.ca.ll.tmp)
do_testf(pointer "pointer_notzero.ca.ll" "pointer_notzero.ca.ll.tmp" ca -ll pointer_notzero.ca pointer_notzero.ca.ll.tmp)
do_testf(pointer "pointer2_notzero.ca.ll" "pointer2_notzero.ca.ll.tmp" ca -ll pointer2_notzero.ca pointer2_notzero.ca.ll.tmp)
do_testf(pointer "pointer_mixed.ca.ll" "pointer_mixed.ca.ll.tmp" ca -ll pointer_mixed.ca pointer_mixed.ca.ll.tmp)
do_testf(pointer "pointer_mixed2.ca.ll" "pointer_mixed2.ca.ll.tmp" ca -ll pointer_mixed2.ca pointer_mixed2.ca.ll.tmp)
do_test(pointer "only an address \\(pointer\\) type can do dereference, `i32` type cannot" ca deref_error.ca)
do_test(pointer "only an address \\(pointer\\) type can do dereference, `i32` type cannot" ca deref_error2.ca)
do_test(pointer "only an address \\(pointer\\) type can do dereference, `i32` type cannot" ca deref_error3.ca)
do_test(pointer "i32\n\\*i32\n\\*\\*i32\n\\*\\*\\*i32\ni32\n\\*i32\n\\*\\*i32\ni32\n\\*i32\ni32\n\\*i32\ni32\n\\*\\*i32\n\\*\\*i32\n\\*i32\n\\*\\*\\*i32\n\\*\\*i32\nsize = 4, type: t:i32\nsize = 8, type: t:\\*i32\nsize = 8, type: t:\\*\\*i32\nsize = 8, type: t:\\*\\*\\*i32\nderef:\nsize = 4, type: t:i32\nsize = 8, type: t:\\*i32\nsize = 8, type: t:\\*\\*i32\n0x.*\nderef2:\nsize = 4, type: t:i32\nsize = 8, type: t:\\*i32\n0x.*\nderef3:\nsize = 4, type: t:i32\n1\nBBBBBBBBBBBBBBBBBB\n&a: 0x.*\nsize = 8, type: t:\\*i32\n1\npa: 0x.*\n1\n1\n2\npb: 0x.*\n2\nsize = 4, type: t:i32\n\n2 dimension pointer:\n\nppa: 0x.*\nsize = 8, type: t:\\*\\*i32\n&pa: 0x.*\nsize = 8, type: t:\\*\\*i32\n\\*ppa: 0x.*\nsize = 8, type: t:\\*i32\nsize = 8, type: t:\\*\\*\\*i32\nsize = 8, type: t:\\*\\*i32\npppa: 0x.*\n\\*ppa: 0x.*" ca deref.ca)
do_test(pointer "\\*i32\n\\*i8\npa: 0x.*\npb: 0x.*\nsize = 8, type: t:\\*i32\nsize = 8, type: t:\\*i8" ca deref2.ca)
do_test(pointer "\\*i32\n\\*i8\npa: 0x.*\npb: 0x.*\nsize = 8, type: t:\\*i32\nsize = 8, type: t:\\*i8" ca deref3.ca)
do_test(pointer "0x.*\n1\n2\n3\n4\n5\n10\n43\n" ca deref4.ca)
do_testf(pointer "deref5.ca.ll" "deref5.ca.ll.tmp" ca -ll deref5.ca deref5.ca.ll.tmp)
do_testf(pointer "deref6.ca.ll" "deref6.ca.ll.tmp" ca -ll deref6.ca deref6.ca.ll.tmp)
do_test(pointer "0x2\n0x2a\n0x26\n0x32\n" ca deref7.ca)
do_test(pointer "0x2\n0x2a\n0x26\n0x32\n" ca deref7.ca)

