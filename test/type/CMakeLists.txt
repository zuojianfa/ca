set(test_case_seq 1)
do_test(type "good" ca array1.ca)
do_test(type "line: 44, col: 22: type `A5` defined multiple times" ca array2.ca)
do_test(type "good" ca array3.ca)
do_test(type "good" ca array_pointer1.ca)
# don't know why the test cannot detect following string
#do_test(type "i64\n[i32; 4]\n[[i32; 4]; 3]\n[[[i32; 4]; 3]; 5]\n[[[[i32; 4]; 3]; 5]; 5]\n[[[[[i32; 4]; 3]; 5]; 5]; 3]\n[[[[[[i32; 4]; 3]; 5]; 5]; 3]; 5]\n[[[[[[[i32; 4]; 3]; 5]; 5]; 3]; 5]; 5]\n[[i32; 4]; 3]\n[[[i32; 4]; 3]; 5]\n[[[[i32; 4]; 3]; 5]; 5]\n[[[[[i32; 4]; 3]; 5]; 5]; 3]\n[[[[[[i32; 4]; 3]; 5]; 5]; 3]; 5]\n[[[[[[[i32; 4]; 3]; 5]; 5]; 3]; 5]; 5]\ni32\n[i32; 4]\n[[i32; 4]; 3]\n[[[i32; 4]; 3]; 5]\n[[[[i32; 4]; 3]; 5]; 5]\n[[[[[i32; 4]; 3]; 5]; 5]; 3]\n[[[[[[i32; 4]; 3]; 5]; 5]; 3]; 5]\n[[[[[[[i32; 4]; 3]; 5]; 5]; 3]; 5]; 5]\n[[i32; 4]; 3]\n[[[i32; 4]; 3]; 5]\n[[[[i32; 4]; 3]; 5]; 5]\n[[[[[i32; 4]; 3]; 5]; 5]; 3]\n[[[[[[i32; 4]; 3]; 5]; 5]; 3]; 5]\n[[[[[[[i32; 4]; 3]; 5]; 5]; 3]; 5]; 5]\n" ca dbgarray3.ca)
do_test(type "good" ca dbgarray_pointer1.ca)
do_test(type "good" ca dbgpointer3.ca)
do_test(type "good" ca dbgstruct3.ca)
do_test(type "good" ca dbgstruct_use1.ca)
do_test(type "good" ca dbgstruct_use2.ca)
do_test(type "good" ca dbgstruct_use3.ca)
do_test(type "good" ca dbgall_r1.ca)
do_test(type "line: 4, column: 14, expected `t:i32`, found `t:f32`" ca diff_type.ca)
do_test(type "101" ca duptypevar.ca)
do_test(type "line: 4, column: 14, expected `t:i32`, found `t:i64`" ca exprtype1.ca)
do_test(type "line: 5, column: 14, expected `t:i32`, found `t:A`" ca exprtype2.ca)
do_test(type "line: 4, col: 16: type name conflicting: type 't:A' with type 't:i64'" ca exprtype3.ca)
do_test(type "good" ca exprtype4.ca)
do_test(type "line: 4, column: 14, expected `t:i32`, found `t:A`" ca exprtype5.ca)
do_test(type "line: 4, column: 14, expected `t:i32`, found `t:A`" ca exprtype6.ca)
do_test(type "202" ca extern_fn_post.ca)
do_test(type "good" ca fndecl1.ca)
do_test(type "good" ca fndecl2.ca)
do_test(type "good" ca pointer1.ca)
do_test(type "good" ca pointer2.ca)
do_test(type "good" ca pointer3.ca)
do_test(type "good" ca pointer_extend.ca)
do_test(type "f\n102\nB\n66\nC\n67" ca postfndecl1.ca)
do_test(type "fB66C67" ca postfndecl.ca)
do_test(type "102103104" ca postfunc1.ca)
do_test(type "102103104" ca postfunc2b.ca)
do_test(type "102103104" ca postfunc2.ca)
do_test(type "102103104" ca postfunc3.ca)
do_test(type "206" ca postsimple1.ca)
do_test(type "202" ca postsimple2.ca)
do_test(type "202" ca postsimple3.ca)
do_test(type "102" ca posttype1.ca)
do_test(type "102" ca posttype2.ca)
do_test(type "102103" ca posttype3.ca)
do_test(type "102103104" ca posttype4.ca)
do_test(type "good" ca returntype.ca)
do_test(type "line: 2, column: 9, return value `0` type 't:i32' not match function type 't:void'" ca returntype2.ca)
do_test(type "good" ca struct1.ca)
do_test(type "good" ca struct2.ca)
do_test(type "good" ca struct3.ca)
do_test(type "good" ca struct4.ca)
do_test(type "good" ca struct_size2.ca)
do_test(type "good" ca struct_use1.ca)
do_test(type "good" ca struct_use2.ca)
do_test(type "good" ca struct_use3.ca)
do_test(type "3" ca typedef.ca)
do_test(type "type name conflicting: type `A`[(]`i32`[)] with type `i64`[(]`i64`[)]" ca typehir.ca)
do_test(type "i32\nsize = 4, type: t:i32" ca typeof.ca)
do_test(type "101" ca typesimple.ca)

