fn main() {
    let v1: I1    = 0;
    let v2: P     = 0;
    let v3: A     = 0;
    let v4: PP    = 0;
    let v5: AP    = 0;
    let v6: PA    = 0;
    let v7: AA    = 0;
    let v8: PPP   = 0;
    let v9: APP   = 0;
    let v10: PAP  = 0;
    let v11: AAP  = 0;
    let v12: PPA  = 0;
    let v13: APA  = 0;
    let v14: PAA  = 0;
    let v15: AAA  = 0;
    let v16: PPPP = 0;
    let v17: APPP = 0;
    let v18: PAPP = 0;
    let v19: AAPP = 0;
    let v20: PPAP = 0;
    let v21: APAP = 0;
    let v22: PAAP = 0;
    let v23: AAAP = 0;
    let v24: PPPA = 0;
    let v25: APPA = 0;
    let v26: PAPA = 0;
    let v27: AAPA = 0;
    let v28: PPAA = 0;
    let v29: APAA = 0;
    let v30: PAAA = 0;
    let v31: AAAA = 0;
    let v32: *I1      = 0;
    let v33: [I1;1]   = 0;
    let v34: *P       = 0;
    let v35: [P;2]    = 0;
    let v36: *A       = 0;
    let v37: [A; 3]   = 0;
    let v38: *PP      = 0;
    let v39: [PP;4]   = 0;
    let v40: *AP      = 0;
    let v41: [AP;5]   = 0;
    let v42: *PA      = 0;
    let v43: [PA;6]   = 0;
    let v44: *AA      = 0;
    let v45: [AA;7]   = 0;
    let v46: *PPP     = 0;
    let v47: [PPP;8]  = 0;
    let v48: *APP     = 0;
    let v49: [APP;9]  = 0;
    let v50: *PAP     = 0;
    let v51: [PAP;10] = 0;
    let v52: *AAP     = 0;
    let v53: [AAP;11] = 0;
    let v54: *PPA     = 0;
    let v55: [PPA;12] = 0;
    let v56: *APA     = 0;
    let v57: [APA;13] = 0;
    let v58: *PAA     = 0;
    let v59: [PAA;14] = 0;
    let v60: *AAA     = 0;
    let v61: [AAA;15] = 0;
    let v62: *i32                 = 0;
    let v63: [i32;1]              = 0;
    let v64: **i32                = 0;
    let v65: [*i32;2]             = 0;
    let v66: *[i32;1]             = 0;
    let v67: [[i32;1];3]          = 0;
    let v68: ***i32               = 0;
    let v69: [**i32;4]            = 0;
    let v70: *[*i32;2]            = 0;
    let v71: [[*i32;2];5]         = 0;
    let v72: **[i32;1]            = 0;
    let v73: [*[i32;1];6]         = 0;
    let v74: *[[i32;1];3]         = 0;
    let v75: [[[i32;1];3];7]      = 0;
    let v76: ****i32              = 0;
    let v77: [***i32;8]           = 0;
    let v78: *[**i32;4]           = 0;
    let v79: [[**i32;4];9]        = 0;
    let v80: **[*i32;2]           = 0;
    let v81: [*[*i32;2];10]       = 0;
    let v82: *[[*i32;2];5]        = 0;
    let v83: [[[*i32;2];5];11]    = 0;
    let v84: ***[i32;1]           = 0;
    let v85: [**[i32;1];12]       = 0;
    let v86: *[*[i32;1];6]        = 0;
    let v87: [[*[i32;1];6];13]    = 0;
    let v88: **[[i32;1];3]        = 0;
    let v89: [*[[i32;1];3];14]    = 0;
    let v90: *[[[i32;1];3];7]     = 0;
    let v91: [[[[i32;1];3];7];15] = 0;
    let v92: [ [   [  [ i32 ; 1 ] ;  3 ]  ;  7  ]  ; 15  ] = 0;

    type I1 = i32;
    type P = *I1;         // *i32
    type A = [I1;1];      // [i32;1]
    type PP = *P;         // **i32
    type AP = [P;2];      // [*i32;2]
    type PA = *A;         // *[i32;1]
    type AA = [A;  3];    // [[i32;1];3]
    type PPP = *PP;       // ***i32
    type APP = [PP;4];    // [**i32;4]
    type PAP = *AP;       // *[*i32;2]
    type AAP = [AP;5];    // [[*i32;2];5]
    type PPA = *PA;       // **[i32;1]
    type APA = [PA;6];    // [*[i32;1];6]
    type PAA = *AA;       // *[[i32;1];3]
    type AAA = [AA;7];    // [[[i32;1];3];7]
    type PPPP = *PPP;     // ****i32
    type APPP = [PPP;8];  // [***i32;8]
    type PAPP = *APP;     // *[**i32;4]
    type AAPP = [APP;9];  // [[**i32;4];9]
    type PPAP = *PAP;     // **[*i32;2]
    type APAP = [PAP;10]; // [*[*i32;2];10]
    type PAAP = *AAP;     // *[[*i32;2];5]
    type AAAP = [AAP;11]; // [[[*i32;2];5];11]
    type PPPA = *PPA;     // ***[i32;1]
    type APPA = [PPA;12]; // [**[i32;1];12]
    type PAPA = *APA;     // *[*[i32;1];6]
    type AAPA = [APA;13]; // [[*[i32;1];6];13]
    type PPAA = *PAA;     // **[[i32;1];3]
    type APAA = [PAA;14]; // [*[[i32;1];3];14]
    type PAAA = *AAA;     // *[[[i32;1];3];7]
    type AAAA = [AAA;15]; // [[[[i32;1];3];7];15]

    print 'g'; print 'o'; print 'o'; print 'd'; print '\n';
}

