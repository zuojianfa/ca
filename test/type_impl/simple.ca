struct AA {
    a: i32,
    b: char,
}

impl AA {
    fn from(a: i32) -> AA {
	return AA{a: a, b: 'A'};
    }

    fn new(a: i32, b: char) -> AA {
	return AA{a, b};
    }

    fn output(self) {
	print *self; print '\n';
	print self->a; print '\n';
	print self->b; print '\n';
    }

    fn output_a(self) {
	print self->a; print '\n';
    }

    fn output_b(self) {
	print self->b; print '\n';
    }

    fn sum(self) -> i32 {
	return self->a + self->b as i32;
    }
}

fn main() {
    let a = AA::new(100, 'C');
    a.output();
    let s = a.sum();
    print s; print '\n';
    a.output_a();
    a.output_b();

    let b = AA::from(303);
    b.output();
}


