trait TT {
    fn default_static_method() {
	print "TT::default_static_method\n";
    }

    fn output(self, v: i32) -> i32 {
	print "TT::output = ";
	print v;
	print '\n';
	return 3;
    }

    fn output2(self, v1: i32, v2: i32) -> i32 {
	self->output(v1);
	self->output(v2);
	return v1 + v2;
    }
}

fn main() {
    struct AA {
    }

    impl AA {
	fn new() -> AA {
	    return AA{};
	}

	fn output(self, v: i32) -> i32 {
	    print "AA::output = ";
	    print v;
	    print '\n';
	    return 0;
	}
    }

    impl TT for AA {
    }

    AA::default_static_method();
    let a = AA::new();
    a.output(400);
    a.output2(300, 500);
}

