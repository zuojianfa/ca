set(test_case_seq 1)
do_test(trait "good" ca trait0.ca)
do_test(trait "not all trait items implemented, missing: `static_method`" ca trait1_error.ca)
do_test(trait "AA {  }\nTT::static_method" ca trait1.ca)
do_test(trait "    fn static_method1\\(\\) {\n	print \"TT::static_method1\\\\n\"\\;\n    }\n                        ^\nnot all trait items implemented, missing: `static_method2`" ca trait2_error.ca)
do_test(trait "TT::static_method1\n143165576" ca trait2.ca)
do_test(trait "AA::static_method1\nTT::static_method2\n12" ca trait3_cover1.ca)
do_test(trait "AA::static_method1\nAA::static_method2\n36" ca trait3_cover2.ca)
do_test(trait "TT::output: Hello CA" ca trait4.ca)
do_test(trait "AA::output: Hello CA" ca trait4_cover.ca)
do_test(trait "TT::output: Hello CA\nTT::no_self_fn1\nTT::no_self_fn2: 301\n3" ca trait5.ca)
do_test(trait "AA::output: Hello CA\nAA::no_self_fn1\nTT::no_self_fn2: 301\nAA:add: 3" ca trait5_cover.ca)
do_test(trait "AA::output: Hello CA\nAA::no_self_fn1\nTT::no_self_fn2: 301\n3\n32\n3345\n" ca trait6_multiple.ca)
do_test(trait "AA::output\nAA::output\nAA::static_out" ca trait6_multiple_same.ca)
do_test(trait "multiple applicable items in scope.*note: candidate #1 is defined in an impl of the trait `TT2` for the type `AA`.*note: candidate #2 is defined in an impl of the trait `TT` for the type `AA`" ca trait6_multiple_same_error.ca)
do_test(trait "TT::output\nTT::output\n33\n55" ca trait7_path1.ca)
do_test(trait "AA::static_method1\nTT::static_method1\nAA::static_method2\n36\nTT::static_method2\n12\n" ca trait7_path2.ca)
do_test(trait "TT::output\nAA::output\nTT::output\nTT::increase\n336\nAA::increase\n558\nTT::increase\n780" ca trait7_path3.ca)
do_test(trait "AA::static_method1\nTT::static_method1\nAA::static_method2\n36\nTT::static_method2\n12\nTT::output\nAA::output\nTT::output\nTT::increase\n336\nAA::increase\n558\nTT::increase\n780\n" ca trait7_path4.ca)
do_test(trait "TT::default_static_method" ca trait8_copy1.ca)
do_test(trait "inner TT::default_static_method" ca trait8_copy2.ca)
do_test(trait "TT::default_static_method" ca trait8_copy3.ca)
do_test(trait "TT::default_static_method" ca trait8_copy4.ca)
do_test(trait "inner TT::default_static_method" ca trait8_copy5.ca)
do_test(trait "TT::output = 400\n" ca trait8_copy1_method0.ca)
do_test(trait "TT::output = 400\nTT::output2 in AA\nTT::output = 500\nTT::output2 in BB\n" ca trait8_copy1_method0_2way.ca)
do_test(trait "TT::default_static_method\nTT::output = 400\nTT::output = 300\nTT::output = 500" ca trait8_copy1_method1.ca)
do_test(trait "TT::default_static_method\nAA::output = 400\nAA::output = 300\nAA::output = 500" ca trait8_copy1_method2.ca)
do_test(trait "TT::default_static_method\nTT::output = 400\nTT::output = 300\nTT::output = 500" ca trait8_copy2_method1.ca)
do_test(trait "TT::default_static_method\nAA::output = 400\nAA::output = 300\nAA::output = 500" ca trait8_copy2_method2.ca)
do_test(trait "TT::default_static_method\nTT::output = 400\nTT::output = 300\nTT::output = 500" ca trait8_copy3_method1.ca)
do_test(trait "TT::default_static_method\nAA::output = 400\nAA::output = 300\nAA::output = 500" ca trait8_copy3_method2.ca)
do_test(trait "TT::default_static_method\nTT::output = 400\nTT::output = 300\nTT::output = 500" ca trait8_copy4_method1.ca)
do_test(trait "TT::default_static_method\nAA::output = 400\nAA::output = 300\nAA::output = 500" ca trait8_copy4_method2.ca)
do_test(trait "TT::default_static_method\nTT::output = 400\nTT::output = 300\nTT::output = 500" ca trait8_copy5_method1.ca)
do_test(trait "TT::default_static_method\nAA::output = 400\nAA::output = 300\nAA::output = 500" ca trait8_copy5_method2.ca)

