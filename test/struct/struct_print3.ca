// test for recursive type
fn main() {
    struct AA { a: *AA, }
    struct A1 { a: *A1, b: i32, }
    struct A2 { a: A1, b: *A2, }
    struct A3 { a: *A3, b: A2, }
    struct A4 { a: A3, b: *A4, }
    struct A5 { a: *A5, b: A4, }
    struct A6 { a: A5, b: *A6, }
    struct A7 { a: *A7, b: BB, }

    struct BB { a: B1, b: i32 }
    struct B1 { a: B2, }
    struct B2 { a: *B2, b: *A7, }

    type PAA = *AA;

    let pv0: PAA = __zero_init__;
    let v0:  AA  = __zero_init__;
    let v1:  A1  = __zero_init__;
    let v2:  A2  = __zero_init__;
    let v3:  A3  = __zero_init__;
    let v4:  A4  = __zero_init__;
    let v5:  A5  = __zero_init__;
    let v6:  A6  = __zero_init__;
    let v7:  A7  = __zero_init__;

    print pv0; print '\n';
    print v0; print '\n';
    print v1; print '\n';
    print v2; print '\n';
    print v3; print '\n';
    print v4; print '\n';
    print v5; print '\n';
    print v6; print '\n';
    print v7; print '\n';

    print 'g'; print 'o'; print 'o'; print 'd'; print '\n';
}
