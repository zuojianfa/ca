struct AP {
    f1: *char,
}

struct AI {
    f1: [i32; 3],
}

struct AA {
    f1: [i32; 3],
    f2: *char,
}

struct A1 {
    f1: AA,
    f2: [char; 9],
}

fn main() {
    let ap1 = AP {0x7f0879249000i64 as *char};
    print ap1; print '\n';
    let ap2 = AP {f1: 0x7f0879249000i64 as *char};
    print ap2; print '\n';   

    let ai1 = AI {f1: [1, 2, 3]};
    print ai1; print '\n';
    let ai2 = AI {[1, 2, 3]};
    print ai2; print '\n';

    let aa1 = AA {[234, 567, 890], 0x7f4f972c404ei64 as *char};
    print aa1; print '\n';
    let aa2 = AA {f1: [234, 567, 890], f2: 0x7f4f972c404ei64 as *char};
    print aa2; print '\n';
    let aa3 = AA {f2: 0x7f4f972c404ei64 as *char, f1: [234, 567, 890]};
    print aa3; print '\n';

    let a11 = A1 {aa1, ['H', 'e', 'l', 'l', 'o', ' ', 'C', 'A', '!']};
    print a11; print '\n';
    a11.f1.f1[0] = 100;
    a11.f1.f1[1] = 200;
    a11.f1.f1[2] = 300;
    print a11; print '\n';
    print a11.f1; print '\n';
    print a11.f1.f1; print '\n';
    print a11.f1.f1[2]; print '\n';

    let a12 = A1 {f1: aa1, f2: ['H', 'e', 'l', 'l', 'o', ' ', 'C', 'A', '!']};
    print a12; print '\n';
    let a13 = A1 {f2: ['H', 'e', 'l', 'l', 'o', ' ', 'C', 'A', '!'], f1: aa1};
    print a13; print '\n';
}

